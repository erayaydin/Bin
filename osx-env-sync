#!/usr/bin/env bash

# Path
readonly ENVIRONMENTD="$HOME/.local/etc/environment.d"
readonly VERSION="0.1.1"
readonly SYSTEM_NAME=$(uname -s)

# Script Initialization
launchctl setenv OSX_ENV_SYNC_VERSION "$VERSION"

# Prepare environment variables from environment.d directory
for envconf in "$ENVIRONMENTD/"*.conf; do
    basename=$(basename -- $envconf)

    if [[ $basename == *-*.conf ]] && [[ $basename != $SYSTEM_NAME-*.conf ]] && [[ $basename != All-*.conf ]]; then
        continue
    fi

    printf "Processing %s...\n" "$basename"

    envlineno=0
    while read -r envline; do
        envlineno=$((envlineno + 1))

        # Skip empty lines and commented lines
        case "$envline" in ('#'*|'')
            continue
        esac

        #Â Check line syntax
        case "$envline" in (*=*) ;; (*)
            printf '%s:%d - Ignoring incorrectly formatted line: %s\n' \
                "$envconf" $envlineno "$envline"
            continue
        esac

        # Check variable name
        case "${envline%%=*}" in ([!A-Z_]*|*[!A-Z0-9_]*)
            printf '%s:%d - Ignoring invalid variable name: %s\n' \
                "$envconf" $envlineno "${envline%%=*}"
            continue
        esac

        # Process line
        eval "export $envline";

        # Read environment key and value based on the line
        IFS='=' read -ra envparams <<< "$envline"
        envKey=${envparams[0]}
        envValue=$(echo "${envparams[1]}" | tr -d '"')

        printf "launchctl setenv %s %s\n" $envKey $envValue

        # Assign it to Launchd
        eval "launchctl setenv $envKey $envValue"
    done < "$envconf"
    unset envline
done
unset envconf
